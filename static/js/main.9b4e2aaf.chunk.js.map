{"version":3,"sources":["utils/index.js","Components/SettingsGame.js","Components/Cell.js","Components/Board.js","Components/Game.js","App.js","index.js"],"names":["CROSS","ZERO","SettingsGame","setPlayers","winner","players","setWinner","classModal","firstPlayer","className","onClick","secondPlayer","Cell","value","Board","useState","Array","fill","cells","setCells","xIsNext","setXIsNext","calculateWinnerMemo","useCallback","lines","i","length","a","b","c","firstPlayerWon","secondPlayerWon","filter","el","useEffect","renderCell","handleClick","cellsCopy","indicator","Game","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b4e2aaf.chunk.js","sourcesContent":["export const CROSS = \"X\";\r\nexport const ZERO = \"O\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CROSS, ZERO } from \"../utils\";\r\n\r\nconst SettingsGame = ({ setPlayers, winner, players, setWinner }) => {\r\n  let classModal = players.firstPlayer ? \"none\" : \"SettingsGame-wrap\";\r\n  return (\r\n    <div className={classModal}>\r\n      <div className=\"SettingsGame-modal\">\r\n        {!!winner && winner === \"draw\" && <p>Ничья</p>}\r\n        {!!winner && winner === \"Игрок 1\" && `Победитель Игрок 1`}\r\n        {!!winner && winner === \"Игрок 2\" && `Победитель Игрок 2`}\r\n        <p>Игрок 1 сделайте свой выбор:</p>\r\n        <div>\r\n          <button\r\n            className=\"SettingsGame-btn\"\r\n            onClick={() => {\r\n              setPlayers({\r\n                ...players,\r\n                firstPlayer: CROSS,\r\n                secondPlayer: ZERO,\r\n              });\r\n              setWinner(\"\");\r\n            }}\r\n          >\r\n            {CROSS}\r\n          </button>\r\n          <button\r\n            className=\"SettingsGame-btn\"\r\n            onClick={() => {\r\n              setPlayers({\r\n                ...players,\r\n                firstPlayer: ZERO,\r\n                secondPlayer: CROSS,\r\n              });\r\n              setWinner(\"\");\r\n            }}\r\n          >\r\n            {ZERO}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSettingsGame.propTypes = {\r\n  setPlayers: PropTypes.func,\r\n  winner: PropTypes.string,\r\n  players: PropTypes.shape({\r\n    firstPlayer: PropTypes.string,\r\n    secondPlayer: PropTypes.string,\r\n    firstPlayerWon: PropTypes.number,\r\n    secondPlayerWon: PropTypes.number,\r\n  }),\r\n  setWinner: PropTypes.func,\r\n};\r\n\r\nexport default SettingsGame;\r\n","import React from \"react\";\r\n\r\nconst Cell = ({ value, onClick }) => {\r\n  return (\r\n    <button className=\"cell\" onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CROSS, ZERO } from \"../utils\";\r\n\r\nconst Board = ({ players, winner, setWinner, setPlayers }) => {\r\n  const [cells, setCells] = useState(Array(9).fill(null));\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n\r\n  const calculateWinnerMemo = useCallback(\r\n    (cells) => {\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\r\n          setWinner(cells[a] === players.firstPlayer ? \"Игрок 1\" : \"Игрок 2\");\r\n          if (cells[a] === players.firstPlayer) {\r\n            setPlayers({\r\n              ...players,\r\n              firstPlayerWon: players.firstPlayerWon + 1,\r\n              firstPlayer: \"\",\r\n              secondPlayer: \"\",\r\n            });\r\n            return;\r\n          }\r\n          if (cells[a] === players.secondPlayer) {\r\n            setPlayers({\r\n              ...players,\r\n              secondPlayerWon: players.secondPlayerWon + 1,\r\n              firstPlayer: \"\",\r\n              secondPlayer: \"\",\r\n            });\r\n            return;\r\n          }\r\n          setCells(Array(9).fill(null));\r\n          setXIsNext(true);\r\n          return;\r\n        }\r\n        if (cells.filter((el) => el !== null).length === 9) {\r\n          setWinner(\"draw\");\r\n          setPlayers({ ...players, firstPlayer: \"\", secondPlayer: \"\" });\r\n          setCells(Array(9).fill(null));\r\n          setXIsNext(true);\r\n          return;\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n    [players, setWinner, setPlayers]\r\n  );\r\n\r\n  useEffect(() => {\r\n    calculateWinnerMemo(cells);\r\n  }, [cells, calculateWinnerMemo, players, setPlayers, winner]);\r\n\r\n  const renderCell = (i) => {\r\n    return <Cell value={cells[i]} onClick={() => handleClick(i)} />;\r\n  };\r\n\r\n  const handleClick = (i) => {\r\n    const cellsCopy = [...cells];\r\n    if (winner) {\r\n      return;\r\n    }\r\n    if (cellsCopy[i]) {\r\n      return;\r\n    }\r\n    cellsCopy[i] = xIsNext ? CROSS : ZERO;\r\n    setXIsNext(!xIsNext);\r\n    setCells(cellsCopy);\r\n  };\r\n\r\n  const indicator =\r\n    players.firstPlayer === CROSS\r\n      ? xIsNext\r\n        ? \"Игрок 1\"\r\n        : \"Игрок 2\"\r\n      : xIsNext\r\n      ? \"Игрок 2\"\r\n      : \"Игрок 1\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"info\">\r\n        <div className=\"info-row\">\r\n          <div>{`Игрок 1 (${players.firstPlayer})`}</div>\r\n          <div>{`Игрок 2 (${players.secondPlayer})`}</div>\r\n        </div>\r\n        <div className=\"info-row\">\r\n          <div>\r\n            {`Количество ходов: ${\r\n              cells.filter((el) => el === players.firstPlayer).length\r\n            }`}\r\n          </div>\r\n          <div>\r\n            {`Количество ходов: ${\r\n              cells.filter((el) => el === players.secondPlayer).length\r\n            }`}\r\n          </div>\r\n        </div>\r\n        <div className=\"info-row\">\r\n          <div>{`Побед: ${players.firstPlayerWon}`}</div>\r\n          <div>{`Побед: ${players.secondPlayerWon}`}</div>\r\n        </div>\r\n        <div className=\"info-row\">{`Следующий ход: ${indicator}`}</div>\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderCell(0)}\r\n        {renderCell(1)}\r\n        {renderCell(2)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderCell(3)}\r\n        {renderCell(4)}\r\n        {renderCell(5)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderCell(6)}\r\n        {renderCell(7)}\r\n        {renderCell(8)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nBoard.propTypes = {\r\n  setPlayers: PropTypes.func,\r\n  winner: PropTypes.string,\r\n  players: PropTypes.shape({\r\n    firstPlayer: PropTypes.string,\r\n    secondPlayer: PropTypes.string,\r\n    firstPlayerWon: PropTypes.number,\r\n    secondPlayerWon: PropTypes.number,\r\n  }),\r\n  setWinner: PropTypes.func,\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport SettingsGame from \"./SettingsGame\";\r\nimport Board from \"./Board\";\r\n\r\nconst Game = () => {\r\n  const [players, setPlayers] = useState({\r\n    firstPlayer: \"\",\r\n    secondPlayer: \"\",\r\n    firstPlayerWon: 0,\r\n    secondPlayerWon: 0,\r\n  });\r\n  const [winner, setWinner] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Board\r\n        players={players}\r\n        winner={winner}\r\n        setWinner={setWinner}\r\n        setPlayers={setPlayers}\r\n      />\r\n\r\n      <SettingsGame\r\n        setPlayers={setPlayers}\r\n        players={players}\r\n        winner={winner}\r\n        setWinner={setWinner}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./Components/Game\";\nconst App = () => {\n  return <Game />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}